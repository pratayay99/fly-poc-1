name: Fly Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy fp-app and dependents
    runs-on: ubuntu-latest
    concurrency: deploy-group

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Create .env file from secrets
        run: |
          echo "VITE_REACT_APP_APP_ENV=${{ secrets.VITE_REACT_APP_APP_ENV }}" > .env

      - name: Deploy fp-app (main app) with .env
        run: flyctl deploy --remote-only -a fp-app
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Delete .env file
        run: rm -f .env

      - name: Get list of Fly.io apps
        run: flyctl apps list --json > apps.json
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy dependent fp-app-* apps with latest image
        run: |
          # Get the list of apps starting with 'fp-app-' but excluding 'fp-app' itself
          apps=$(jq -r '.[].Name' apps.json | grep '^fp-app-' | grep -v '^fp-app$' || true)

          if [[ -z "$apps" ]]; then
            echo "‚úÖ No fp-app-* dependent apps found to update."
          else
            # Deploy each dependent app with the latest image from fp-app
            for app in $apps; do
              echo "üöÄ Deploying $app with latest fp-app image..."
              if ! flyctl deploy --image registry.fly.io/fp-app:latest --remote-only -a "$app"; then
                echo "‚ùå Failed to deploy $app"
                # Exit the loop or the job can be customized here (optional)
                exit 1
              fi
            done
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
